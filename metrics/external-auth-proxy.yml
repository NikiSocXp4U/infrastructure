apiVersion: v1
kind: ConfigMap
metadata:
  name: external-auth-proxy-config
  namespace: metrics
data:
  default.conf.template: |-
    server {
      listen 80;

      location /mc/minecraft {
          rewrite ^ /prometheus/minecraft/metrics break;
          proxy_ssl_server_name on;
          proxy_set_header Host mc.astrid.tech;
          proxy_set_header Authorization "Basic ${PROMETHEUS_CREDENTIALS}";
          proxy_pass https://mc.astrid.tech;
      }

      location /mc/node {
          rewrite ^ /prometheus/node/metrics break;
          proxy_ssl_server_name on;
          proxy_set_header Host mc.astrid.tech;
          proxy_set_header Authorization "Basic ${PROMETHEUS_CREDENTIALS}";
          proxy_pass https://mc.astrid.tech;
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: external-auth-proxy
  namespace: metrics
  labels:
    app: external-auth-proxy
spec:
  ports:
    - port: 80
      name: web
  selector:
    app: external-auth-proxy-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-auth-proxy
  namespace: metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: external-auth-proxy
  template:
    metadata:
      labels:
        app: external-auth-proxy
    spec:
      containers:
        - name: proxy
          image: nginx:alpine
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
          envFrom:
            - secretRef:
                name: external-auth-proxy-credentials
          ports:
            - containerPort: 80
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/templates

      volumes:
        - name: config
          configMap:
            name: external-auth-proxy-config
